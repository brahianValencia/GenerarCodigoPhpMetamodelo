@namespace(uri="http://abstracta",prefix="abstracta")
package abstracta;

class ModelFactoryAbstracta{
	val Projectba[*] lstProjectba;
	val Clasifier[*] lstClasifierba;
}

class Projectba{
	attr String name;
	attr String path;
	val Packageba[*] lstPackages;
}

class Packageba{
	attr String name;
	attr String path;
	val Packageba[*] listPackages;
	val Classba[*] lstClass;	
}

class Classba extends Clasifier{
	attr Boolean isAbstract;
	attr Boolean isInterface;
	attr AccessModifyba modifyAcces;
	attr String path;
	val Relationshipba[*] lstRelationshipSourceba;
	val Attributeba[*] lstAttributesba;
	val Relationshipba[*] lstRelationshipTargetba;
	val Methodba[*] lstMethodba;
	
}

class Relationshipba {
	attr String ide;
	attr Boolean isAgregation;
	attr Boolean isContainment;
	attr Boolean isGeneralization;
	attr Boolean isAssociation;
	attr Boolean isImplementation;
	attr String multS;
	attr String multT;
	attr String rolS;
	attr String rolT;
	ref Classba source;
	ref Classba target;
}

class Clasifier{
	attr String name;
	ref Attributeba[*] lstAttributebaC;
}

class PrimitiveDataType extends Clasifier{
	
}

class Attributeba {

	attr String name;
	attr String defaultValue;
	ref Classba classba;
	ref Clasifier type;
	attr AccessModifyba modifyAcces;

}

class Methodba {
	
	attr String name;
	attr String body;
	ref Clasifier retorno;
	ref Classba classba;
	val Parameter[*] lstParametersba;
	attr AccessModifyba modifyAcces;
}

class Parameter{
	
	attr String name;
	ref Methodba methodba;
	ref Clasifier type;
}

enum AccessModifyba{
	
	PUBLIC=1;
	PRIVATE=2;
	PROTECTED=3;
	DEFAULT=4;
}
