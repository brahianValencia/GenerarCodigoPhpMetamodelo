@namespace(uri="http://concreta",prefix="concreta")
package concreta;

class ModelFactoryConcreta{
	val Projectba[*] lstProjectba;
	val Clasifier[*] lstClasifierba;
}

class Projectba{
	attr String name;
	attr String path;
	val DiagramClassba[*] lstDiagramClassba;
}

@gmf.diagram
class DiagramClassba{
	attr String name;
	attr String path;
	val Classba[*] lstClass;	
	val Relationshipba[*] lstRelationshipba;	
}

class Packageba{
	attr String name;
	attr String path;
	val Packageba[*] listPackages;
	val Classba[*] lstClass;	
}

class Classba extends Clasifier{
	attr Boolean isAbstract;
	attr Boolean isInterface;
	attr Boolean isFinalClass;
	attr String path;
	val Relationshipba[*] lstAttributesba;
	val Relationshipba[*] lstMethodba;
	
}

class Relationshipba {
	attr Boolean isAgregation;
	attr Boolean isComposition;
	attr Boolean isGeneralization;
	attr Boolean isAssociation;
	attr String multS;
	attr String multT;
	attr String rolS;
	attr String rolTS;
	ref Classba source;
	ref Classba target;
}

class Clasifier{
	attr String name;
	ref Attributeba[*] lstAttributebaC;
}

class PrimitiveDataType extends Clasifier{
	
}

class Attributeba {

	attr String name;
	attr String defaultValue;
	ref Classba ownedByClassba;
	ref Clasifier theClasifierba;
	
}

class Methodba {
	
	attr String name;
	ref Classba ownedByClassba;
	val Parameter[*] lstParametersba;
}

class Parameter{
	
	attr String name;
	ref Methodba ownedByMethodba;
	ref Clasifier theClasifierba;
}

